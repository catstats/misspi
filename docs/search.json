[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhongli Jiang. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jiang Z (2023). misspi: Missing Value Imputation Parallel. R package version 0.1.0.","code":"@Manual{,   title = {misspi: Missing Value Imputation in Parallel},   author = {Zhongli Jiang},   year = {2023},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"misspi-","dir":"","previous_headings":"","what":"Missing Value Imputation in Parallel","title":"Missing Value Imputation in Parallel","text":"Missing Value Imputation Parallel","code":""},{"path":"/index.html","id":"install-from-r-cran","dir":"","previous_headings":"","what":"Install From R CRAN","title":"Missing Value Imputation in Parallel","text":"install.packages(“misspi”)","code":""},{"path":"/reference/evaliq.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the Imputation Quality — evaliq","title":"Evaluate the Imputation Quality — evaliq","text":"Calculates Root Mean Squared Error (RMSE), Mean Absolute Error (MAE) Normalized Root Mean Squared Error (NRMSE). also performs visualization imputation quality evaluation.","code":""},{"path":"/reference/evaliq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the Imputation Quality — evaliq","text":"","code":"evaliq(x.true, x.impute, plot = TRUE, interactive = FALSE)"},{"path":"/reference/evaliq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the Imputation Quality — evaliq","text":"x.true vector true values. x.impute vector estimated values. plot Boolean indicates whether plot . interactive Boolean indicates whether use interactive plot plot option invoked (plot = \"TRUE\").","code":""},{"path":"/reference/evaliq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate the Imputation Quality — evaliq","text":"rmse root mean squared error. mae mean absolute error. nrmse normalized root mean squared error.","code":""},{"path":[]},{"path":"/reference/evaliq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Evaluate the Imputation Quality — evaliq","text":"Zhongli Jiang jiang548@purdue.edu","code":""},{"path":"/reference/evaliq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate the Imputation Quality — evaliq","text":"","code":"# A very quick example n <- 100 x.true <- rnorm(n) x.est <- x.true na.idx <- sample(1:n, 20) x.est[na.idx] <- x.est[na.idx] + rnorm(length(na.idx), sd = 0.1)  # Default plot er.eval <- evaliq(x.true[na.idx], x.est[na.idx])  # Interactive plot er.eval <- evaliq(x.true[na.idx], x.est[na.idx], interactive = TRUE)  # Turn off plot # All of the three case will return the value of error er.eval <- evaliq(x.true[na.idx], x.est[na.idx], plot = FALSE) er.eval   # \\donttest{ # Real data example set.seed(0) data(toxicity, package = \"misspi\") toxicity.miss <- missar(toxicity, 0.4, 0.2) impute.res <- misspi(toxicity.miss) x.imputed <- impute.res$x.imputed  na.idx <- which(is.na(toxicity.miss)) evaliq(toxicity[na.idx], x.imputed[na.idx]) evaliq(toxicity[na.idx], x.imputed[na.idx], interactive = TRUE)# }"},{"path":"/reference/missar.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Data that is Missing At Random (MAR) — missar","title":"Generate Data that is Missing At Random (MAR) — missar","text":"Simulates missing value random NA given matrix.","code":""},{"path":"/reference/missar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Data that is Missing At Random (MAR) — missar","text":"","code":"missar(x, miss.rate = 0.2, miss.var = 1)"},{"path":"/reference/missar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Data that is Missing At Random (MAR) — missar","text":"x matrix used fill missing values NA. miss.rate value missing rate within range (0, 1) variables contain missing values. miss.var proportion variables (columns) contain missing values.","code":""},{"path":"/reference/missar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Data that is Missing At Random (MAR) — missar","text":"x matrix missing values \"NA\".","code":""},{"path":[]},{"path":"/reference/missar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate Data that is Missing At Random (MAR) — missar","text":"Zhongli Jiang jiang548@purdue.edu","code":""},{"path":"/reference/missar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Data that is Missing At Random (MAR) — missar","text":"","code":"# \\donttest{ set.seed(0) data(toxicity, package = \"misspi\") toxicity.miss <- missar(toxicity, 0.4, 1) toxicity.miss[1:5, 1:5]# }"},{"path":"/reference/misspi.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing Value Imputation in Parallel — misspi","title":"Missing Value Imputation in Parallel — misspi","text":"Enables embarrassingly parallel computing imputation. advantages include Provides fast implementation especially high dimensional datasets. Accepts variety machine learning models methods friendly user portal. Supports multiple initializations. Supports early stopping prohibits unnecessary iterations.","code":""},{"path":"/reference/misspi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing Value Imputation in Parallel — misspi","text":"","code":"misspi(   x,   ncore = NULL,   init.method = \"rf\",   method = \"rf\",   earlystopping = TRUE,   ntree = 100,   init.ntree = 100,   viselect = NULL,   lgb.params = NULL,   lgb.params0 = NULL,   model.train = NULL,   pmm = TRUE,   nn = 3,   intcol = NULL,   maxiter = 10,   rdiff.thre = 0.01,   verbose = TRUE,   progress = TRUE,   nlassofold = 5,   isis = FALSE,   char = \" * \",   iteration = TRUE,   ndecimal = NULL,   ... )"},{"path":"/reference/misspi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Missing Value Imputation in Parallel — misspi","text":"x matrix numerical values imputation, missing value \"NA\". ncore number cores use, set cores detected default. init.method initializing method fill missing value imputation. Support \"rf\" random forest imputation default, \"mean\" mean imputation, \"median\" median imputation. method method name imputation, support \"rf\" random forest, \"lgb\" lightgbm, \"lasso\" LASSO, \"customize\" want use method. earlystopping Boolean indicates whether stop algorithm relative difference stop decreasing, TRUE default. ntree number trees use imputation method \"rf\" \"gbm\". init.ntree number trees use initialization method \"rf\" viselect number variables highest variable importance calculated random forest initialization work value NULL. work init.method \"rf\", method \"rf\" \"gbm\". lgb.params parameters customize lightgbm models, invoked method \"rf\" \"gbm\". lgb.params0 parameters customize initialization using random forest, invoked init.method \"rf\". model.train machine learning model invoked customizing imputation. invoked parameter method = \"customize\". input model able take y~x fitting process y, x matrices, also make sure called using method \"predict\" model prediction. pass parameters model additional arguments ... pmm Boolean indicated whether use predictive mean matching. nn number neighbors use prediction predictive mean matching invoked (pmm \"TRUE\"). intcol vector indices columns know integer, round integer every iteration. maxiter maximum number iterations imputation. rdiff.thre relative difference threshold determining imputation convergence. verbose Boolean indicates whether print intermediate steps verbally. progress Boolean indicates whether show progress bar. nlassofold number folds cross validation method \"lasso\". isis Boolean indicates whether use isis method \"lasso\", recommended use ultra high dimension. char character use also accept unicode progress bar. example, u03c, u213c pi, u2694 swords, u2605 star, u2654 king, u26a1 thunder, u2708 plane. iteration Boolean indicates whether use iterative algorithm. ndecimal number decimals round result, NULL meaning intervention. ... arguments passed method.","code":""},{"path":"/reference/misspi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Missing Value Imputation in Parallel — misspi","text":"list contains imputed values, time consumed number iterations. x.imputed imputed matrix. time.elapsed time consumed algorithm. niter number iterations used algorithm.","code":""},{"path":"/reference/misspi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Missing Value Imputation in Parallel — misspi","text":"Azur, M. J., Stuart, E. ., Frangakis, C., & Leaf, P. J. (2011). Multiple imputation chained equations: work?. International journal methods psychiatric research, 20(1), 40-49. Ke, G., Meng, Q., Finley, T., Wang, T., Chen, W., Ma, W., ... & Liu, T. Y. (2017). Lightgbm: highly efficient gradient boosting decision tree. Advances neural information processing systems, 30. Stekhoven, D. J., & Bühlmann, P. (2012). MissForest—non-parametric missing value imputation mixed-type data. Bioinformatics, 28(1), 112-118. Fan, J., & Lv, J. (2008). Sure independence screening ultrahigh dimensional feature space. Journal Royal Statistical Society Series B: Statistical Methodology, 70(5), 849-911. Tibshirani, R. (1996). Regression shrinkage selection via lasso. Journal Royal Statistical Society Series B: Statistical Methodology, 58(1), 267-288. Breiman, L. (2001). Random forests. Machine learning, 45, 5-32.","code":""},{"path":[]},{"path":"/reference/misspi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Missing Value Imputation in Parallel — misspi","text":"Zhongli Jiang jiang548@purdue.edu","code":""},{"path":"/reference/misspi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missing Value Imputation in Parallel — misspi","text":"","code":"# \\donttest{ # Quick example 1 # Load a small data data(iris) # Keep numerical columns num.col <- which(sapply(iris, is.numeric)) iris.numeric <- as.matrix(iris[, num.col]) set.seed(0) iris.miss <- missar(iris.numeric, 0.3, 1) iris.impute <- misspi(iris.miss) iris.impute  # Quick example 2 # Load a high dimensional data data(toxicity, package = \"misspi\") set.seed(0) toxicity.miss <- missar(toxicity, 0.4, 0.2) toxicity.impute <- misspi(toxicity.miss) toxicity.impute  # Change cores iris.impute.5core <- misspi(iris.miss, ncore = 5)  # Change initialization and maximum iterations (no iteration in the example) iris.impute.mean.5iter <- misspi(iris.miss, init.method = \"mean\", maxiter = 0)  # Change fun shapes for progress bar iris.impute.king <- misspi(iris.miss, char = \" \\u2654\")   # Use variable selection toxicity.impute.vi <- misspi(toxicity.miss, viselect = 128)   # Use different machine learning algorithms as method # linear model iris.impute.lm <- misspi(iris.miss, model.train = lm)  # From external packages # Support Vector Machine (SVM)  library(e1071) iris.impute.svm.radial <- misspi(iris.miss, model.train = svm)   # Neural Networks  library(neuralnet) iris.impute.nn <- misspi(iris.miss, model.train = neuralnet)# }"},{"path":"/reference/toxicity.html","id":null,"dir":"Reference","previous_headings":"","what":"Toxicity Data — toxicity","title":"Toxicity Data — toxicity","text":"data created Gul, S., Rahim, F., Isin, S. et al. (2021) doi:10.1038/s41598-021-97962-5 , downloaded cleaned UCI Machine Learning Repository doi:10.24432/C59313 . toxicity data consists 171 molecules 1203 molecule descriptors.","code":""},{"path":"/reference/toxicity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toxicity Data — toxicity","text":"","code":"data(toxicity)"},{"path":"/reference/toxicity.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Toxicity Data — toxicity","text":"matrix 171 rows 1203 columns","code":""},{"path":"/reference/toxicity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Toxicity Data — toxicity","text":"doi:10.1038/s41598-021-97962-5  Gul, S., Rahim, F., Isin, S., Yilmaz, F., Ozturk, N., Turkay, M., & Kavakli, . H. (2021). Structure-based design classifications small molecules regulating circadian rhythm period. Scientific reports, 11(1), 18510.","code":""}]
